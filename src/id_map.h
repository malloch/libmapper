
#ifndef __MPR_ID_MAP_H__
#define __MPR_ID_MAP_H__

#include <stdint.h>
#include "util/mpr_inline.h"

/*! Bit flags for indicating instance `id_pair` status. */
#define UPDATED           0x01
#define RELEASED_LOCALLY  0x02
#define RELEASED_REMOTELY 0x04

typedef struct _mpr_id_map *mpr_id_map;
typedef uint64_t mpr_id;

mpr_id_map mpr_id_map_new();

void mpr_id_map_free(mpr_id_map map);

// TODO: also move this struct into id_map.c
/*! The instance ID map is a linked list of int32 instance ids for coordinating
 *  remote and local instances. */
typedef struct _mpr_id_pair {
    struct _mpr_id_pair *next;      /*!< The next id map in the list. */

    uint64_t GID;                   /*!< Global instance id (generated by originating device). */
    uint64_t LID;                   /*!< Local instance id. */
    int16_t LID_refcount;
    int16_t GID_refcount;
    uint8_t indirect;
} mpr_id_pair_t, *mpr_id_pair;

MPR_INLINE static void mpr_id_pair_incr_local_refcount(mpr_id_pair id_pair)
{
    ++id_pair->LID_refcount;
}

MPR_INLINE static void mpr_id_pair_incr_global_refcount(mpr_id_pair id_pair)
{
    ++id_pair->GID_refcount;
}

MPR_INLINE static int mpr_id_pair_get_local_refcount(mpr_id_pair id_pair)
{
    return id_pair->GID_refcount;
}

MPR_INLINE static int mpr_id_pair_get_global_refcount(mpr_id_pair id_pair)
{
    return id_pair->GID_refcount;
}

// add count to reserve?
void mpr_id_map_reserve(mpr_id_map map);

int mpr_id_map_LID_decref(mpr_id_map map, mpr_id_pair id_pair);

int mpr_id_map_GID_decref(mpr_id_map map, mpr_id_pair id_pair);

mpr_id_pair mpr_id_map_add(mpr_id_map map, mpr_id LID, mpr_id GID, int indirect);

// rename as 'get_GID'
mpr_id_pair mpr_id_map_get_by_LID(mpr_id_map map, mpr_id LID);

mpr_id_pair mpr_id_map_get_by_GID(mpr_id_map map, mpr_id GID);

/* TODO: rename this function */
mpr_id_pair mpr_id_map_get_GID_free(mpr_id_map map, mpr_id last_GID);

int mpr_id_map_get_size(mpr_id_map map, int active);

void mpr_id_map_remove(mpr_id_map map, mpr_id_pair rem);

#ifdef DEBUG
void mpr_id_map_print(mpr_id_map map);
#endif

#endif /* __MPR_ID_MAP_H__ */
